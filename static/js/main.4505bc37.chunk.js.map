{"version":3,"sources":["components/CharCard/CharCard.js","components/Jumbotron/Jumbotron.js","components/Nav/Nav.js","App.js","index.js"],"names":["charCard","props","react_default","a","createElement","className","src","alt","onClick","click","Jumbotron","Nav","correct","score","topscore","App","state","cards","clickedCard","correctWord","clickHandler","cardId","_this","indexOf","arr","Object","toConsumableArray","push","shuffledCrads","Shuffle","setState","resetGameHandler","_this2","this","components_Nav_Nav","components_Jumbotron_Jumbotron","map","card","CharCard_CharCard","id","image","key","Component","Radium","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"kUAYeA,SATE,SAACC,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMK,IAAKC,IAAI,MAAMC,QAASP,EAAMQ,WCI3CC,SAPG,kBAClBR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACdH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2FCOWO,SAVH,SAAAV,GACR,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SAAIH,EAAMW,SACVV,EAAAC,EAAAC,cAAA,kBAAUH,EAAMY,MAAhB,oBAAwCZ,EAAMa,qDCCpDC,6MACJC,MAAQ,CACNC,QACAC,YAAY,GACZC,YAAY,GACZN,MAAM,EACNC,SAAS,KAEXM,aAAe,SAACC,GACd,GAAGC,EAAKN,MAAME,YAAYK,QAAQF,GAAQ,EAAE,CAC5C,IAAMG,EAAIC,OAAAC,EAAA,EAAAD,CAAIH,EAAKN,MAAME,aACzBM,EAAIG,KAAKN,GACT,IAAMO,EAAcC,IAAQZ,GAC5BK,EAAKQ,SAAS,CACZb,MAAOW,EACPf,MAAOS,EAAKN,MAAMH,MAAQ,EAC1BK,YAAYM,EACZL,YAAY,wBAGTG,EAAKS,mBACPT,EAAKN,MAAMH,MAAQS,EAAKN,MAAMF,UAC/BQ,EAAKQ,SAAS,CAAChB,SAASQ,EAAKN,MAAMH,WAGvCkB,iBAAkB,WAChBT,EAAKQ,SAAS,CACZZ,YAAY,GACZL,MAAM,EACNM,YAAY,oGAIV,IAAAa,EAAAC,KAER,OACE/B,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC8B,EAAD,CAAKrB,MAAOoB,KAAKjB,MAAMH,MAAOD,QAASqB,KAAKjB,MAAMG,YAAaL,SAAUmB,KAAKjB,MAAMF,WACpFZ,EAAAC,EAAAC,cAAC+B,EAAD,MACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZ4B,KAAKjB,MAAMC,MAAMmB,IAAI,SAACC,EAAMhB,GAC3B,OAAOnB,EAAAC,EAAAC,cAACkC,EAAD,CACC7B,MAAO,kBAAMuB,EAAKZ,aAAaiB,EAAKE,KACpCjC,IAAK+B,EAAKG,MACVC,IAAKJ,EAAKE,gBA7CRG,aAsDHC,cAAO5B,SC1DtB6B,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4505bc37.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CharCard.css\";\r\n\r\nconst charCard = (props) =>{ \r\n    return(\r\n        <div className=\"CharCard\">\r\n            <img src={props.src} alt=\"img\" onClick={props.click} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default charCard;\r\n","import React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nconst Jumbotron = () => (\r\n<header className=\"Jumbotron\">\r\n    <h1>Clicky Game!</h1>\r\n    <h2>Click on an image to earn points, but don not click on any more than once!</h2>\r\n</header>\r\n)\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = props => {\r\n    return(\r\n        <div className=\"Nav\">\r\n            <p>Click an image to begin!</p>\r\n            <p>{props.correct}</p>\r\n            <p>SCORE:{props.score} | HIGHEST SCORE:{props.topscore}</p>\r\n        </div>\r\n    )       \r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport CharCard from \"./components/CharCard\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport Nav from \"./components/Nav\";\r\nimport cards from \"./cards.json\";\r\nimport Radium from 'radium';\r\nimport \"./App.css\";\r\nimport Shuffle from 'lodash.shuffle';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    cards,\r\n    clickedCard:[],\r\n    correctWord:\"\",\r\n    score:0,\r\n    topscore:0\r\n  };\r\n  clickHandler = (cardId) =>{\r\n    if(this.state.clickedCard.indexOf(cardId)<0){\r\n    const arr=[...this.state.clickedCard];\r\n    arr.push(cardId)\r\n    const shuffledCrads=Shuffle(cards);\r\n    this.setState({ \r\n      cards: shuffledCrads,\r\n      score: this.state.score + 1, \r\n      clickedCard:arr, \r\n      correctWord:\"You are right!\"\r\n    })\r\n    }\r\n    else{this.resetGameHandler()};\r\n    if(this.state.score > this.state.topscore){\r\n      this.setState({topscore:this.state.score})\r\n    }\r\n  };\r\n  resetGameHandler =()=>{\r\n    this.setState({\r\n      clickedCard:[],\r\n      score:0,\r\n      correctWord:\"It was a wrong choice!\",\r\n    })\r\n  }\r\n\r\nrender(){\r\n\r\nreturn(\r\n  <div>\r\n\r\n  <Nav score={this.state.score} correct={this.state.correctWord} topscore={this.state.topscore} />\r\n  <Jumbotron />\r\n    <div className=\"imgContainer\">\r\n      {this.state.cards.map((card, cardId)=>{\r\n        return <CharCard \r\n                click={() => this.clickHandler(card.id)}\r\n                src={card.image}                \r\n                key={card.id} />\r\n        }  \r\n      )}\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Radium(App);\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}